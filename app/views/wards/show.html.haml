- @page_title = @ward.name

#google_map
  #map_canvas{:style=>"width: 500px; height: 500px"}
  

#councillors

  %h2
    Councillors
  
  %p.quiet
    (via 
    = link_to 'Openly Local', 'http://openlylocal.com/councils/167-Birmingham-City-Council'
    )
  %h3
    = link_to "Write to them", "http://www.writetothem.com/"

  #ward_councillors
    %ul
      - @openly_local_ward.members.each do |member|        
        %li

          .councillor.vcard
            .fn
              = member.first_name
              = member.last_name
            .org
              = member.party
            .adr
              .street_address
                = member.address
              .locality
                Birmingham
              .country-name
                UK
            .tel
              = member.telephone
            .email
              = link_to member.email, "mailto:#{member.email}"


#plings
  %h2
    Things to do
  %p.quiet
    (via 
    = link_to 'Plings', 'http://plings.info'
    )
  #recent_plings
    %ul
      /= render :partial=> 'shared/rss_item_long', :collection=>@plings

#fix_my_street
  %h2
    Street problems 
  
  %p.quiet
    (via 
    = link_to 'FixMyStreet.com', 'http://fixmystreet.com'
    )
    
  %h3
    = link_to 'Report a problem', 'http://fixmystreet.com'
    
  #recent_problems
    %ul
      = render :partial=> 'shared/rss_item', :collection=>@fix_my_street
      
#planning_alerts
  %h2
    Recent planning applications
  %p.quiet
    (via 
    = link_to 'PlanningAlerts.com', 'http://planningalerts.com'
    )
  #recent_alerts
    %ul
      = render :partial=> 'shared/rss_item_long', :collection=>@planning_alerts


- content_for :scripts do

  = javascript_include_tag "http://maps.google.com/maps?file=api&amp;v=2.x&amp;key=ABQIAAAAa7htYtqM06zRBCnvw4H0whT4RPgNTbRw-6xXu3oOlixanS-NkRRvsEzhRxgsYXDewt8vTRJMtM4cLA"
  = javascript_include_tag "http://www.google.com/uds/api?file=uds.js&v=1.0&key=ABQIAAAAa7htYtqM06zRBCnvw4H0whT4RPgNTbRw-6xXu3oOlixanS-NkRRvsEzhRxgsYXDewt8vTRJMtM4cLA"
  
  %script{:type=>"text/javascript"}
    :plain
  
      function usePointFromPostcode(postcode, callbackFunction) {

        localSearch.setSearchCompleteCallback(null,
          function() {

            if (localSearch.results[0]) {    
              var resultLat = localSearch.results[0].lat;
              var resultLng = localSearch.results[0].lng;
              var point = new GLatLng(resultLat,resultLng);
              callbackFunction(point);
            }else{
              alert("Postcode not found!");
            }
          });  

        localSearch.execute(postcode + ", UK");
      }
    
      function initialize() {
        var localSearch = new GlocalSearch();
      
        var map;
        if (GBrowserIsCompatible()) {
          var mapOptions = {
            googleBarOptions : {
              style : "new"
            }
          }
          map = new GMap2(document.getElementById("map_canvas"), mapOptions);
          map.setCenter(new GLatLng(33.956461,-118.396225), 13);
          map.setUIToDefault();
          map.enableGoogleBar();
        
    ='usePointFromPostcode("' + cookies[:postcode].gsub(' ', '') + '");'
  
    :plain
        }
      }
    
    
    $(document).ready(function(){initialize()});
    
  - if @fix_my_street.blank?

    :javascript
    
      var fix_my_street = false;
  
      function stop_loading_fix_my_street()
      {
        fix_my_street = true;
      }
    = periodically_call_remote(:url=>fix_my_street_constituency_ward_path(@ward.constituency, @ward), :frequency => 0.5, :condition => "fix_my_street == false")
    
  - if @plings.blank?
    :javascript

      var plings = false;

      function stop_loading_plings()
      {
        plings = true;
      }
    = periodically_call_remote(:url=>plings_constituency_ward_path(@ward.constituency, @ward), :frequency => 0.5, :condition => "plings == false")
  
  - if @planning_alerts.blank?
    
    :javascript
      var planning_alerts = false;

  
      function stop_loading_planning_alerts()
      {
        planning_alerts = true;
      }
    = periodically_call_remote(:url=>planning_alerts_constituency_ward_path(@ward.constituency, @ward), :frequency => 0.5, :condition => "planning_alerts == false")
