- @page_title = @ward.name

- if cookies[:postcode] && cookies[:ward_id].to_i == @ward.id
  - @postcode = cookies[:postcode]
      
- unless @postcode.blank?
  - search_term = @postcode  + ", UK"  
- else
  - search_term = @ward.name + ", Birmingham, UK"

- unless @postcode.blank?
  - if logged_in?
    - unless current_user.postcode == cookies[:postcode]
      #save_postcode
        = button_to_remote "Save this as my postcode", :url=>"/users/#{current_user.login}/set_postcode", :with=>"'postcode=" + @postcode + "'", :method=>:put
    
#ward
  #left_ward  
    - form_tag do
      %h2.first
        Search this area for
        - options_words = ["public park", "adventure playground", "post office", "bank", "library", "council office", "school", "citizens advice bureau", "tax office", "DVLA office", "cafe", "gallery", "soft play", "housing association", "job centre",  "gallery", "museum", "college", "waterway", "cycle route", "police", "gym", "swimming pool", "children's nursery"].sort
        - options = [["something... ", search_term]]
        - options_words.each do |word|
          - options << [word, word + ", " + search_term]
        
        
        = select_tag :query_term, options_for_select(options), :onchange => "localSearch.execute(this.value)"
        
    #mapsearch
      %span
        Loading...
        
      
  
    #fix_my_street
      %h2
        Street problems 


      #recent_problems
        %ul
          = render :partial=> 'shared/rss_item', :collection=>@fix_my_street
      %p.quiet
        (via 
        = link_to 'FixMyStreet.com', 'http://fixmystreet.com'
        )
      %h3
        - unless @postcode.blank?
          = link_to 'Report a problem', 'http://www.fixmystreet.com/?pc=' + @postcode.gsub(' ', '+')
        - else
          = link_to 'Report a problem', 'http://www.fixmystreet.com/'
      

    #planning_alerts
      %h2
        Planning applications

      #recent_alerts
        %ul
          = render :partial=> 'shared/rss_item_long', :collection=>@planning_alerts

      %p.quiet
        (via 
        = link_to 'PlanningAlerts.com', 'http://planningalerts.com'
        )
    #plings
      %h2
        Things to do

      #recent_plings
        %ul
          = render :partial=> 'shared/rss_item_long', :collection=>@plings
      %p.quiet
        (via 
        = link_to 'Plings', 'http://plings.info'
        )
      
  #right_ward
    #councillors

      %h2
        Councillors
  
      


      #ward_members
        %ul
          = render :partial=>"members/member", :collection=>@openly_local_ward.members
      %h3
        = link_to "Write to them", "http://www.writetothem.com/"

      %p.quiet
        (via 
        = link_to 'Openly Local', 'http://openlylocal.com/councils/167-Birmingham-City-Council'
        and 
        = link_to 'WriteToThem', 'http://writetothem.com'
        
        )

    - if 1 ==0
      #committees
        %h2
          Committees
        %p.quiet
          (via 
          = link_to 'Openly Local', 'http://openlylocal.com/councils/167-Birmingham-City-Council'
          )
        #ward_committees
          %ul
            = render :partial=>"committees/committee", :colletion=>@openly_local_ward.committees


- content_for :styles do
  :plain
    <style type="text/css">
      @import url("http://www.google.com/uds/css/gsearch.css");
    </style>
    <style type="text/css">
      @import url("http://www.google.com/uds/solutions/mapsearch/gsmapsearch.css");
    </style>
    
    <style type="text/css">
      .gsmsc-mapDiv {
        height : 320px;
      }

      .gsmsc-idleMapDiv {
        height : 320px;
      }

      #mapsearch {
        width : 640px;
        margin-bottom: 10px;
      }
    </style>
    
- content_for :scripts do
  :plain
    <script src="http://maps.google.com/maps?file=api&v=2&key=ABQIAAAAB7lks_NsFBRocEhVDHvmbBT4RPgNTbRw-6xXu3oOlixanS-NkRQat9me5DBOLXPpWQzNGFE13UEIhg"
       type="text/javascript"></script>
     <script src="http://www.google.com/uds/api?file=uds.js&v=1.0&source=uds-msw&key=ABQIAAAAB7lks_NsFBRocEhVDHvmbBT4RPgNTbRw-6xXu3oOlixanS-NkRQat9me5DBOLXPpWQzNGFE13UEIhg"
       type="text/javascript"></script>


     <!-- Map Search Control and Stylesheet -->
     <script type="text/javascript">
       window._uds_msw_donotrepair = true;
     </script>
     <script src="http://www.google.com/uds/solutions/mapsearch/gsmapsearch.js?mode=new"
       type="text/javascript"></script>
       <script type="text/javascript">
         var localSearch;
         function LoadMapSearchControl() {
           var options = {
                 zoomControl : GSmapSearchControl.ZOOM_CONTROL_ENABLE_ALL,
                 title : "BCCDIY",
                 url : "http://bccdiy.com",
                 idleMapZoom : GSmapSearchControl.ACTIVE_MAP_ZOOM+1,
                 activeMapZoom : GSmapSearchControl.ACTIVE_MAP_ZOOM+1
                 }

           localSearch = new GSmapSearchControl(
                 document.getElementById("mapsearch"),

  ="'" + search_term + "',"
  :plain
               options
               );

       }
       // arrange for this function to be called during body.onload
       // event processing
       $(document).ready(function(){LoadMapSearchControl()});
     </script>


    
  - if @fix_my_street.blank?

    :javascript
    
      var fix_my_street = false;
  
      function stop_loading_fix_my_street()
      {
        fix_my_street = true;
      }
    = periodically_call_remote(:url=>fix_my_street_constituency_ward_path(@ward.constituency, @ward), :frequency => 0.5, :condition => "fix_my_street == false")
    
  - if @plings.blank?
    :javascript

      var plings = false;

      function stop_loading_plings()
      {
        plings = true;
      }
    = periodically_call_remote(:url=>plings_constituency_ward_path(@ward.constituency, @ward), :frequency => 0.5, :condition => "plings == false")
  
  - if @planning_alerts.blank?
    
    :javascript
      var planning_alerts = false;

  
      function stop_loading_planning_alerts()
      {
        planning_alerts = true;
      }
    = periodically_call_remote(:url=>planning_alerts_constituency_ward_path(@ward.constituency, @ward), :frequency => 0.5, :condition => "planning_alerts == false")
